/*
<문제풀이1 - 실패>
1. 자연수 n까지 반복문을 돌린다.
2. 더한 수를 저장할 임의의 변수를 만든다.
3. 1+2+3..., 2+3+4... 이런식으로 n이 되는지 확인해야하기 때문에 이중 반복문을 만든다.
4. j가 1씩 커질 때마다 임의의 변수에 더한다.
5. 이때 임의의 변수가 n 값과 같아지면 count를 1 올려주고, 더 크다면 반복문을 멈춘다.

<결과>
효율성 테스트 3에 실패하였다...
*/
function solution(n) {
  let count = 0;

  for (let i=1; i<=n; i++) {
      let sum = 0;
      
      for (let j=i; j<=n; j++) {
          sum += j;
          if (sum === n) {
              count++
              break;
          } else if (sum > n) {
              break;
          }
      }
  }
  return count;
}

/*
<문제풀이1 - 성공>
아무리 머리를 쥐어 짜봐도 어느 부분이 문제인지 찾을 수 없었다...
그레서 이리 저리 다른 코드로 해봐도 안 되고 방황을 하다가
다시 내가 작성한 기존 코드로 돌렸더니 성공...
나한테 왜 그러는뎁...눙물

<결과>
위 코드와 같습니다...
*/


/*
<문제풀이2 - 정수론>
주어진 자연수를 연속되는 자연수들의 합으로 표현할 수 있는 방법의 수는 
"주어진 자연수의 약수 중에서 홀수인 수의 개수와 같다."

1. 자연수 n까지 반복문을 돌린다.
2. i가 n의 약수이고 홀수인 자연수를 구한다.
3. 해당 두 조건에 모두 만족하면 count를 1씩 올려준다.
*/

function solution(n) {
  const count = 0;

  for (let i=1; i<=n; i++) {
    if (n % i === 0 && n % 2 === 1) {
      count++;
    }
  }
  return count;
}

